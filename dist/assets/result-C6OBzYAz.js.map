{"version":3,"file":"result-C6OBzYAz.js","sources":["../../src/components/result/CardResult.vue","../../src/components/result/PaginationResult.vue","../../src/components/result/TableResult.vue","../../src/server/other.js","../../src/views/result.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n\n    <div class=\"card-body\">\n      <slot name=\"body\"></slot>\n    </div>\n\n    <div class=\"card-footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n\n   </div>\n</template>\n\n<script>\nexport default {\n  name: \"CardResult\"\n}\n</script>\n\n<style scoped>\n\n.card {\n  text-align: center;\n  position: absolute;\n  top: 78px;\n  width: 90%;\n  max-height: 90vh;\n}\n\n.card .card-body {\n  min-height: 30vh;\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.card .card-footer {\n  padding: 0;\n  background-color: transparent;\n}\n</style>","<template>\n  <el-pagination\n    v-model:current-page=\"currentPage\"\n    v-model:page-size=\"pageSize\"\n    :total=\"dataState.info.length\"\n    :page-sizes=\"paginationState.pageSizeList\"\n    :layout=\"paginationState.layout\"\n  ></el-pagination>\n</template>\n\n<script setup>\n\n  import { readState, setState } from \"@/utils/calculate.js\";\n  import { computed, onBeforeMount, onUnmounted, reactive } from \"vue\";\n  import { useMediaQuery } from \"@/utils/mediaQuery\";\n\n  const { dataState, paginationState } = readState();\n  const setStateMethod = setState().paginationState;\n\n  const state = reactive({ mqls: [] })\n\n  const mediaQuery = useMediaQuery();\n\n  onBeforeMount(() => {\n    // 建立媒體查詢\n    state.mqls = mediaQuery.create(Object.keys(MEDIA_QUERY_LAYOUT_CONDITIONS));\n\n    // 新增pagination媒體查詢監聽，fnFirst：是否先執行\n    mediaQuery.startListener(state.mqls, mediaMatch, true);\n  })\n\n  onUnmounted(() => {\n    mediaQuery.removeListener(state.mqls, mediaMatch);\n    state.mqls = [];\n  })\n\n  // ----------------------------- Computed -------------------------------------\n\n  const currentPage = computed({\n    get: () => paginationState.currentPage,\n    set: (newValue) => {\n      setStateMethod.updateCurrentPage(newValue);\n    }\n  })\n\n  const pageSize = computed({\n      get: () => paginationState.pageSize,\n      set: (newValue) => {\n        setStateMethod.updatePageSize(newValue);\n      }\n  })\n\n  // ----------------------- Pagination Media Match ------------------------------\n\n  const MEDIA_QUERY_LAYOUT_CONDITIONS = {\n    '(max-width: 628px)': 'prev, jumper, next, total',\n    '(min-width: 629px) and (max-width: 796px)': 'prev, pager, next, jumper, total',\n    '(min-width: 797px)': 'sizes, prev, pager, next, jumper, total'\n  }\n\n  function mediaMatch(event) {\n    if (event.matches) {\n      setStateMethod.updateLayout(MEDIA_QUERY_LAYOUT_CONDITIONS[event.media])\n    }\n  }\n\n</script>\n\n<style scoped>\n.el-pagination {\n  justify-content: center;\n}\n</style>","<template>\n  <el-table\n    class-name=\"result-table\"\n    :data=\"state.data.slice(\n        (paginationState.currentPage - 1) * paginationState.pageSize,\n         paginationState.currentPage * paginationState.pageSize\n        )\"\n    border\n    @sort-change=\"changeTableSort\"\n    :cell-style=\"{textAlign: 'center'}\"\n    :cell-class-name=\"cellClassName\"\n    :header-cell-class-name=\"headerCellClassName\"\n    @cellMouseEnter=\"cellMouseEnter\"\n    @cellMouseLeave=\"cellMouseLeave\"\n  >\n    <el-table-column label=\"名稱 (代號)\" min-width=\"125\" fixed=\"left\">\n      <template v-slot:default=\"scope\">\n        <a :href=\"scope.row.stockDividendURL\" target=\"_blank\" title=\"查看歷史股利分配率\">\n          {{ scope.row.stockFullName }}\n        </a>\n      </template>\n    </el-table-column>\n    <el-table-column label=\"收盤價\" prop=\"stockPrice\" min-width=\"110\" sortable=\"custom\"></el-table-column>\n    <el-table-column label=\"目前殖利率\" prop=\"averageYield\" min-width=\"150\" sortable=\"custom\"></el-table-column>\n    <el-table-column label=\"ROI\" prop=\"roi\" min-width=\"100\" sortable=\"custom\"></el-table-column>\n    <el-table-column label=\"平均股利 (現金/股票)\" prop=\"averageDividend\" min-width=\"210\"></el-table-column>\n\n    <template v-for=\"i in (dataState.request.yield.end - dataState.request.yield.start + 1)\">\n      <el-table-column\n        :label=\"(dataState.request.yield.start + i - 1).toString() + '%'\"\n        :prop=\"'yield' + (dataState.request.yield.start + i - 1).toString() + 'ConvertPrice'\"\n        min-width=\"85\"\n      ></el-table-column>\n    </template>\n\n  </el-table>\n</template>\n\n<script setup>\n\n  import { reactive, watch } from \"vue\";\n  import { readState } from \"@/utils/calculate.js\";\n\n  const { dataState, paginationState } = readState()\n\n  const state = reactive({\n    hoverColIndex: undefined,\n    hoverRowIndex: undefined,\n    data: JSON.parse(JSON.stringify(dataState.data))\n  })\n\n  // ---------------------------- Table Sortable -----------------------------------\n  function changeTableSort(column) {\n    const field = column.prop\n    const sortType = column.order\n    let sortData = state.data\n\n    // 不排序，使用只讀屬性的資料恢復原本順序\n    if (!sortType) {\n      state.data = JSON.parse(JSON.stringify(dataState.data))\n      return\n    }\n\n    // string 轉成 float\n    if (['averageYield', 'roi'].includes(field)) {\n      sortData.map(item => {\n        item[field] = item[field].replace('%', '')\n      })\n    }\n\n    if (sortType === 'descending') {\n      sortData = sortData.sort((a, b) => b[field] - a[field])\n    } else {\n      sortData = sortData.sort((a, b) => a[field] - b[field])\n    }\n\n    // float 轉成 string\n    if (['averageYield', 'roi'].includes(field)) {\n      sortData.map(item => { item[field] = `${item[field]}%` });\n    }\n\n    state.data = sortData\n  }\n\n  // ------------------------------ Cell Hover -------------------------------------\n  function cellClassName({row, column, rowIndex, columnIndex}) {\n    row.rowIndex = rowIndex\n    column.columnIndex = columnIndex\n\n    if (rowIndex === state.hoverRowIndex && columnIndex === state.hoverColIndex) {\n      return 'select-row select-col'\n    }\n    else if (rowIndex === state.hoverRowIndex) {\n      return 'select-row'\n    }\n    else if (columnIndex === state.hoverColIndex) {\n      return 'select-col'\n    }\n  }\n\n  function headerCellClassName({columnIndex}) {\n    if (columnIndex === state.hoverColIndex) {\n      return 'select-col'\n    }\n  }\n\n  function cellMouseEnter(row, column) {\n    state.hoverRowIndex = row.rowIndex\n    state.hoverColIndex = column.columnIndex\n  }\n\n  function cellMouseLeave() {\n    state.hoverRowIndex = undefined\n    state.hoverColIndex = undefined\n  }\n\n  // --------------------------- Watch Props Data ----------------------------------\n  watch(() => dataState.data, (newData) => {\n    state.data = JSON.parse(JSON.stringify(newData));\n  })\n\n</script>\n\n<style scoped>\n\n@media (max-width: 1024px) {\n  .result-table { font-size: unset; }\n}\n@media (min-width: 1024px){\n  .result-table { font-size: 1.2rem; }\n}\n\n/* 表格的標頭 */\n.result-table :deep(.el-table__header-wrapper .el-table__header th) {\n  text-align: center;\n  border: 0;\n  background-color: #1989ff;\n  color: white;\n}\n/* 與hover cell同一列的標頭 */\n.result-table :deep(.el-table__header-wrapper .el-table__header th.select-col) {\n  border-left: 1px solid #949966;\n  border-right: 1px solid #949966;\n}\n/* hover cell */\n.result-table :deep(.el-table__body-wrapper .el-table__body .el-table__row td:hover) {\n  border: 1px solid #949966;\n  background-color: rgba(148, 153, 102, 0.2);\n}\n/* 與hover cell同一行 */\n.result-table :deep(.el-table__body-wrapper .el-table__body .el-table__row td.select-row) {\n  border-top: 1px solid #949966;\n  border-bottom: 1px solid #949966;\n}\n/* 與hover cell同一列 */\n.result-table :deep(.el-table__body-wrapper .el-table__body .el-table__row td.select-col) {\n  border-left: 1px solid #949966;\n  border-right: 1px solid #949966;\n}\n</style>","import axios from \"@/server/axios.js\";\n\n\nexport async function getFinalUpdateTime() {\n    return axios.get('/updateTime')\n}","<template>\n  <div class=\"result-container\" id=\"resultContainer\">\n    <!-- 標題欄 (導航欄) -->\n    <Navbar\n        :fixed-top=\"true\"\n        navbar-use-animate-bg=\"false\"\n        brand-text=\"試算結果\"\n        :contents-in-collapse=\"[\n          { isBack: true, text: '返回 首頁' },\n          {\n            href: 'https://www.tdcc.com.tw/portal/zh/smWeb/qryStock',\n            title: '開啟集保戶股權分散表',\n            text: '查詢 大股東比例',\n            target: '_blank'\n          },\n          {\n            href: 'https://invest.wessiorfinance.com/stock.html',\n            title: '開啟存股試算',\n            text: '存股 試算',\n            target: '_blank'\n          }\n        ]\"\n        :updates-in-collapse=\"[\n          {\n            id: 'updateDividend',\n            text: '股利最後更新：' + state.update.dividend\n          },\n          {\n            id: 'updatePrice',\n            text: '收盤價最後更新：' + state.update.price\n          }\n        ]\"\n    />\n\n    <!-- 試算結果表格 -->\n    <card-result>\n      <template #body>\n        <table-result />\n      </template>\n      <template #footer>\n        <pagination-result />\n      </template>\n    </card-result>\n  </div>\n</template>\n\n<script setup>\n\n  import { onBeforeMount, reactive, onMounted, onUnmounted } from \"vue\";\n  import Navbar from \"@/components/Navbar.vue\";\n  import { CardResult, TableResult, PaginationResult } from \"@/components/result/index.js\";\n  import { useRouter } from \"vue-router\";\n  import { useCalculateServer, readState, setState } from \"@/utils/calculate.js\";\n  import { getFinalUpdateTime } from \"@/server/other.js\";\n  import { useLoadingServer } from \"@/utils/loading.js\";\n\n  const router = useRouter();\n  const calculate = useCalculateServer();\n  const loading = useLoadingServer();\n  const { dataState } = readState();\n  const setDataState = setState().dataState;\n  const state = reactive({\n    update: { price: '', dividend: '' }\n  })\n\n  onBeforeMount(() => {\n    if (!loading.isRunning()) { loading.show(); }\n  })\n\n  onMounted(async () => {\n    // 取得最後更新時間\n    state.update = await getFinalUpdateTime();\n\n    const waitingTimer = setInterval(() => {\n      if (dataState.isDataReady) {\n        loading.close();\n        clearInterval(waitingTimer);\n\n        if (dataState.isLazyLoading) {\n          calculate.lazyLoading({ limit: 1000, milliSecond: 6000 });\n        }\n\n      }\n    }, 1000);\n  })\n\n  onUnmounted(() => {\n    setDataState.initData();\n  })\n\n</script>\n\n<style scoped>\n\n.result-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n</style>"],"names":["_sfc_main","_hoisted_1","_hoisted_2","_hoisted_3","_ctx","dataState","paginationState","readState","setStateMethod","setState","state","mediaQuery","useMediaQuery","MEDIA_QUERY_LAYOUT_CONDITIONS","mediaMatch","currentPage","newValue","pageSize","event","changeTableSort","column","field","sortType","sortData","item","b","cellClassName","row","rowIndex","columnIndex","headerCellClassName","cellMouseEnter","cellMouseLeave","newData","getFinalUpdateTime","axios","calculate","useCalculateServer","loading","useLoadingServer","setDataState","waitingTimer"],"mappings":"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"}